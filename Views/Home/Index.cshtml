@using Microsoft.AspNetCore.Identity
@model List<Book>
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Home Page";
}

@if (SignInManager.IsSignedIn(User))
{
    <a class="btn btn-success mb-3" asp-action="Add">
        new
    </a>
}

@if (!Model.Any())
{
    <div class="alert alert-warning">
        <h4 class="alert-heading">OOPS!</h4>
        <p class="mb-0">No Books added yet
            @if (SignInManager.IsSignedIn(User))
            {
                <a class="alert-link" asp-action="Add">Add a new book</a>
            }
            .
        </p>
    </div>
}
else
{
   <div class="row mt-2">
        @foreach(Book book in Model)
        {
            <div class="col-lg-4 col-md-6 col-sm-12">
                <a asp-action="Details" asp-route-id="@book.Id" class="card border-light mb-3 text-decoration-none rounded-3 overflow-hidden">
                    <div class="card-body" style="background-image:url('/Images/@book.Image'); background-size: cover; background-position: center; height: 450px;">
                    </div>

                    <div class="card-footer bg-muted align-items-center">
                        <h5>@book.Title</h5>
                        <div>
                            @if (SignInManager.IsSignedIn(User))
                            {
                                <a asp-action="Edit" asp-route-id="@book.Id" class="btn btn-dark">Edit</a>
                                <a asp-action="Delete" asp-route-id="@book.Id" class="btn btn-danger">Delete</a>
                            }
                        </div>
                    </div>
                </a>
            </div>
        }
   </div> 
}

